// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: ticker.proto

package api

import (
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DigestType int32

const (
	DigestType_SHA1   DigestType = 0
	DigestType_SHA256 DigestType = 1
	DigestType_MD5    DigestType = 2
)

// Enum value maps for DigestType.
var (
	DigestType_name = map[int32]string{
		0: "SHA1",
		1: "SHA256",
		2: "MD5",
	}
	DigestType_value = map[string]int32{
		"SHA1":   0,
		"SHA256": 1,
		"MD5":    2,
	}
)

func (x DigestType) Enum() *DigestType {
	p := new(DigestType)
	*p = x
	return p
}

func (x DigestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DigestType) Descriptor() protoreflect.EnumDescriptor {
	return file_ticker_proto_enumTypes[0].Descriptor()
}

func (DigestType) Type() protoreflect.EnumType {
	return &file_ticker_proto_enumTypes[0]
}

func (x DigestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DigestType.Descriptor instead.
func (DigestType) EnumDescriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{0}
}

type TickerImmutableMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature  []byte     `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Digest     []byte     `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
	DigestType DigestType `protobuf:"varint,3,opt,name=digestType,proto3,enum=ticker.DigestType" json:"digestType,omitempty"`
	Uuid       string     `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PrevUuid   string     `protobuf:"bytes,5,opt,name=prevUuid,proto3" json:"prevUuid,omitempty"`
	Idx        int64      `protobuf:"varint,6,opt,name=idx,proto3" json:"idx,omitempty"`
	Ts         int64      `protobuf:"varint,7,opt,name=ts,proto3" json:"ts,omitempty"`
}

func (x *TickerImmutableMessage) Reset() {
	*x = TickerImmutableMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickerImmutableMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerImmutableMessage) ProtoMessage() {}

func (x *TickerImmutableMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerImmutableMessage.ProtoReflect.Descriptor instead.
func (*TickerImmutableMessage) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{0}
}

func (x *TickerImmutableMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *TickerImmutableMessage) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *TickerImmutableMessage) GetDigestType() DigestType {
	if x != nil {
		return x.DigestType
	}
	return DigestType_SHA1
}

func (x *TickerImmutableMessage) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TickerImmutableMessage) GetPrevUuid() string {
	if x != nil {
		return x.PrevUuid
	}
	return ""
}

func (x *TickerImmutableMessage) GetIdx() int64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *TickerImmutableMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type StreamImmutableMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature                   []byte     `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Digest                      []byte     `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
	DigestType                  DigestType `protobuf:"varint,3,opt,name=digestType,proto3,enum=ticker.DigestType" json:"digestType,omitempty"`
	Uuid                        string     `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	PrevUuid                    string     `protobuf:"bytes,5,opt,name=prevUuid,proto3" json:"prevUuid,omitempty"`
	Idx                         int64      `protobuf:"varint,6,opt,name=idx,proto3" json:"idx,omitempty"`
	Ts                          int64      `protobuf:"varint,7,opt,name=ts,proto3" json:"ts,omitempty"`
	Name                        string     `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Tags                        []string   `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	ObjectStoreConnectionString string     `protobuf:"bytes,10,opt,name=objectStoreConnectionString,proto3" json:"objectStoreConnectionString,omitempty"`
	ObjectStoreKey              string     `protobuf:"bytes,11,opt,name=objectStoreKey,proto3" json:"objectStoreKey,omitempty"`
	ObjectDigest                []byte     `protobuf:"bytes,12,opt,name=objectDigest,proto3" json:"objectDigest,omitempty"`
	AnchorTickerUuid            string     `protobuf:"bytes,13,opt,name=anchorTickerUuid,proto3" json:"anchorTickerUuid,omitempty"`
	SubStreamID                 string     `protobuf:"bytes,14,opt,name=subStreamID,proto3" json:"subStreamID,omitempty"`
}

func (x *StreamImmutableMessage) Reset() {
	*x = StreamImmutableMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamImmutableMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamImmutableMessage) ProtoMessage() {}

func (x *StreamImmutableMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamImmutableMessage.ProtoReflect.Descriptor instead.
func (*StreamImmutableMessage) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{1}
}

func (x *StreamImmutableMessage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *StreamImmutableMessage) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *StreamImmutableMessage) GetDigestType() DigestType {
	if x != nil {
		return x.DigestType
	}
	return DigestType_SHA1
}

func (x *StreamImmutableMessage) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StreamImmutableMessage) GetPrevUuid() string {
	if x != nil {
		return x.PrevUuid
	}
	return ""
}

func (x *StreamImmutableMessage) GetIdx() int64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

func (x *StreamImmutableMessage) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *StreamImmutableMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StreamImmutableMessage) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *StreamImmutableMessage) GetObjectStoreConnectionString() string {
	if x != nil {
		return x.ObjectStoreConnectionString
	}
	return ""
}

func (x *StreamImmutableMessage) GetObjectStoreKey() string {
	if x != nil {
		return x.ObjectStoreKey
	}
	return ""
}

func (x *StreamImmutableMessage) GetObjectDigest() []byte {
	if x != nil {
		return x.ObjectDigest
	}
	return nil
}

func (x *StreamImmutableMessage) GetAnchorTickerUuid() string {
	if x != nil {
		return x.AnchorTickerUuid
	}
	return ""
}

func (x *StreamImmutableMessage) GetSubStreamID() string {
	if x != nil {
		return x.SubStreamID
	}
	return ""
}

type AnchorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof       []*StreamImmutableMessage `protobuf:"bytes,1,rep,name=proof,proto3" json:"proof,omitempty"`
	SubStreamID string                    `protobuf:"bytes,2,opt,name=subStreamID,proto3" json:"subStreamID,omitempty"`
}

func (x *AnchorRequest) Reset() {
	*x = AnchorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnchorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnchorRequest) ProtoMessage() {}

func (x *AnchorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnchorRequest.ProtoReflect.Descriptor instead.
func (*AnchorRequest) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{2}
}

func (x *AnchorRequest) GetProof() []*StreamImmutableMessage {
	if x != nil {
		return x.Proof
	}
	return nil
}

func (x *AnchorRequest) GetSubStreamID() string {
	if x != nil {
		return x.SubStreamID
	}
	return ""
}

type AnchorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TickerMessage *TickerImmutableMessage `protobuf:"bytes,1,opt,name=tickerMessage,proto3" json:"tickerMessage,omitempty"`
}

func (x *AnchorResponse) Reset() {
	*x = AnchorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnchorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnchorResponse) ProtoMessage() {}

func (x *AnchorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnchorResponse.ProtoReflect.Descriptor instead.
func (*AnchorResponse) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{3}
}

func (x *AnchorResponse) GetTickerMessage() *TickerImmutableMessage {
	if x != nil {
		return x.TickerMessage
	}
	return nil
}

type TickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TickRequest) Reset() {
	*x = TickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickRequest) ProtoMessage() {}

func (x *TickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickRequest.ProtoReflect.Descriptor instead.
func (*TickRequest) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{4}
}

type TickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TickResponse) Reset() {
	*x = TickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickResponse) ProtoMessage() {}

func (x *TickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickResponse.ProtoReflect.Descriptor instead.
func (*TickResponse) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{5}
}

type GetProofStartUuidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubStreamID string `protobuf:"bytes,1,opt,name=subStreamID,proto3" json:"subStreamID,omitempty"`
}

func (x *GetProofStartUuidRequest) Reset() {
	*x = GetProofStartUuidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProofStartUuidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProofStartUuidRequest) ProtoMessage() {}

func (x *GetProofStartUuidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProofStartUuidRequest.ProtoReflect.Descriptor instead.
func (*GetProofStartUuidRequest) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{6}
}

func (x *GetProofStartUuidRequest) GetSubStreamID() string {
	if x != nil {
		return x.SubStreamID
	}
	return ""
}

type GetProofStartUuidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetProofStartUuidResponse) Reset() {
	*x = GetProofStartUuidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProofStartUuidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProofStartUuidResponse) ProtoMessage() {}

func (x *GetProofStartUuidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProofStartUuidResponse.ProtoReflect.Descriptor instead.
func (*GetProofStartUuidResponse) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{7}
}

func (x *GetProofStartUuidResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type CreateGenesisProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubStreamID string `protobuf:"bytes,1,opt,name=subStreamID,proto3" json:"subStreamID,omitempty"`
}

func (x *CreateGenesisProofRequest) Reset() {
	*x = CreateGenesisProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGenesisProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGenesisProofRequest) ProtoMessage() {}

func (x *CreateGenesisProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGenesisProofRequest.ProtoReflect.Descriptor instead.
func (*CreateGenesisProofRequest) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{8}
}

func (x *CreateGenesisProofRequest) GetSubStreamID() string {
	if x != nil {
		return x.SubStreamID
	}
	return ""
}

type CreateGenesisProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *CreateGenesisProofResponse) Reset() {
	*x = CreateGenesisProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGenesisProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGenesisProofResponse) ProtoMessage() {}

func (x *CreateGenesisProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGenesisProofResponse.ProtoReflect.Descriptor instead.
func (*CreateGenesisProofResponse) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{9}
}

func (x *CreateGenesisProofResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type HappenedBeforeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LhsSubStreamID string `protobuf:"bytes,1,opt,name=lhsSubStreamID,proto3" json:"lhsSubStreamID,omitempty"`
	LhsUuid        string `protobuf:"bytes,2,opt,name=lhsUuid,proto3" json:"lhsUuid,omitempty"`
	LhsStreamIdx   int64  `protobuf:"varint,3,opt,name=lhsStreamIdx,proto3" json:"lhsStreamIdx,omitempty"`
	RhsUuid        string `protobuf:"bytes,4,opt,name=rhsUuid,proto3" json:"rhsUuid,omitempty"`
	RhsStreamIdx   int64  `protobuf:"varint,5,opt,name=rhsStreamIdx,proto3" json:"rhsStreamIdx,omitempty"`
	RhsSubStreamID string `protobuf:"bytes,6,opt,name=rhsSubStreamID,proto3" json:"rhsSubStreamID,omitempty"`
}

func (x *HappenedBeforeRequest) Reset() {
	*x = HappenedBeforeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HappenedBeforeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HappenedBeforeRequest) ProtoMessage() {}

func (x *HappenedBeforeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HappenedBeforeRequest.ProtoReflect.Descriptor instead.
func (*HappenedBeforeRequest) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{10}
}

func (x *HappenedBeforeRequest) GetLhsSubStreamID() string {
	if x != nil {
		return x.LhsSubStreamID
	}
	return ""
}

func (x *HappenedBeforeRequest) GetLhsUuid() string {
	if x != nil {
		return x.LhsUuid
	}
	return ""
}

func (x *HappenedBeforeRequest) GetLhsStreamIdx() int64 {
	if x != nil {
		return x.LhsStreamIdx
	}
	return 0
}

func (x *HappenedBeforeRequest) GetRhsUuid() string {
	if x != nil {
		return x.RhsUuid
	}
	return ""
}

func (x *HappenedBeforeRequest) GetRhsStreamIdx() int64 {
	if x != nil {
		return x.RhsStreamIdx
	}
	return 0
}

func (x *HappenedBeforeRequest) GetRhsSubStreamID() string {
	if x != nil {
		return x.RhsSubStreamID
	}
	return ""
}

type HappenedBeforeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HappenedBefore bool `protobuf:"varint,1,opt,name=happenedBefore,proto3" json:"happenedBefore,omitempty"`
}

func (x *HappenedBeforeResponse) Reset() {
	*x = HappenedBeforeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ticker_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HappenedBeforeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HappenedBeforeResponse) ProtoMessage() {}

func (x *HappenedBeforeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ticker_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HappenedBeforeResponse.ProtoReflect.Descriptor instead.
func (*HappenedBeforeResponse) Descriptor() ([]byte, []int) {
	return file_ticker_proto_rawDescGZIP(), []int{11}
}

func (x *HappenedBeforeResponse) GetHappenedBefore() bool {
	if x != nil {
		return x.HappenedBefore
	}
	return false
}

var File_ticker_proto protoreflect.FileDescriptor

var file_ticker_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x01, 0x0a, 0x16, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x49,
	0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x65, 0x76, 0x55, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x65, 0x76, 0x55, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x22, 0xd8, 0x03, 0x0a, 0x16,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6e, 0x63, 0x68,
	0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0x67, 0x0a, 0x0d, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x20, 0x0a,
	0x0b, 0x73, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22,
	0x56, 0x0a, 0x0e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x54, 0x69, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6f, 0x66, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x44, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x15, 0x48, 0x61, 0x70, 0x70, 0x65,
	0x6e, 0x65, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x68, 0x73, 0x53, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x68, 0x73, 0x53, 0x75, 0x62,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x68, 0x73, 0x55,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x68, 0x73, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x68, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x68, 0x73, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x68, 0x73, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x68, 0x73, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x68, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x68, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x78, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x68, 0x73, 0x53, 0x75, 0x62, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x68,
	0x73, 0x53, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x16,
	0x48, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x2a, 0x2b,
	0x0a, 0x0a, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x53, 0x48, 0x41, 0x31, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x32, 0x35, 0x36,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x44, 0x35, 0x10, 0x02, 0x32, 0x8a, 0x05, 0x0a, 0x06,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x06, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x12, 0x15, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x41, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x4a, 0x0a, 0x04, 0x54, 0x69,
	0x63, 0x6b, 0x12, 0x13, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x2e, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x69, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6f, 0x66, 0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x20, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x7d, 0x12, 0x8d, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e,
	0x65, 0x73, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x21, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x65,
	0x73, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x2f, 0x7b, 0x73, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x44, 0x7d, 0x12, 0xc3, 0x01, 0x0a, 0x0e, 0x48, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x42,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1d, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x48,
	0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x48, 0x61,
	0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x6c, 0x12, 0x6a, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x2f, 0x7b, 0x6c, 0x68, 0x73, 0x53, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x44, 0x7d, 0x2f, 0x7b, 0x6c, 0x68, 0x73, 0x55, 0x75, 0x69, 0x64, 0x7d, 0x2f,
	0x7b, 0x6c, 0x68, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x78, 0x7d, 0x2f, 0x7b,
	0x72, 0x68, 0x73, 0x53, 0x75, 0x62, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x7d, 0x2f,
	0x7b, 0x72, 0x68, 0x73, 0x55, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x72, 0x68, 0x73, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x78, 0x7d, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ticker_proto_rawDescOnce sync.Once
	file_ticker_proto_rawDescData = file_ticker_proto_rawDesc
)

func file_ticker_proto_rawDescGZIP() []byte {
	file_ticker_proto_rawDescOnce.Do(func() {
		file_ticker_proto_rawDescData = protoimpl.X.CompressGZIP(file_ticker_proto_rawDescData)
	})
	return file_ticker_proto_rawDescData
}

var file_ticker_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ticker_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_ticker_proto_goTypes = []interface{}{
	(DigestType)(0),                    // 0: ticker.DigestType
	(*TickerImmutableMessage)(nil),     // 1: ticker.TickerImmutableMessage
	(*StreamImmutableMessage)(nil),     // 2: ticker.StreamImmutableMessage
	(*AnchorRequest)(nil),              // 3: ticker.AnchorRequest
	(*AnchorResponse)(nil),             // 4: ticker.AnchorResponse
	(*TickRequest)(nil),                // 5: ticker.TickRequest
	(*TickResponse)(nil),               // 6: ticker.TickResponse
	(*GetProofStartUuidRequest)(nil),   // 7: ticker.GetProofStartUuidRequest
	(*GetProofStartUuidResponse)(nil),  // 8: ticker.GetProofStartUuidResponse
	(*CreateGenesisProofRequest)(nil),  // 9: ticker.CreateGenesisProofRequest
	(*CreateGenesisProofResponse)(nil), // 10: ticker.CreateGenesisProofResponse
	(*HappenedBeforeRequest)(nil),      // 11: ticker.HappenedBeforeRequest
	(*HappenedBeforeResponse)(nil),     // 12: ticker.HappenedBeforeResponse
}
var file_ticker_proto_depIdxs = []int32{
	0,  // 0: ticker.TickerImmutableMessage.digestType:type_name -> ticker.DigestType
	0,  // 1: ticker.StreamImmutableMessage.digestType:type_name -> ticker.DigestType
	2,  // 2: ticker.AnchorRequest.proof:type_name -> ticker.StreamImmutableMessage
	1,  // 3: ticker.AnchorResponse.tickerMessage:type_name -> ticker.TickerImmutableMessage
	3,  // 4: ticker.Ticker.Anchor:input_type -> ticker.AnchorRequest
	5,  // 5: ticker.Ticker.Tick:input_type -> ticker.TickRequest
	7,  // 6: ticker.Ticker.GetProofStartUuid:input_type -> ticker.GetProofStartUuidRequest
	9,  // 7: ticker.Ticker.CreateGenesisProof:input_type -> ticker.CreateGenesisProofRequest
	11, // 8: ticker.Ticker.HappenedBefore:input_type -> ticker.HappenedBeforeRequest
	4,  // 9: ticker.Ticker.Anchor:output_type -> ticker.AnchorResponse
	6,  // 10: ticker.Ticker.Tick:output_type -> ticker.TickResponse
	8,  // 11: ticker.Ticker.GetProofStartUuid:output_type -> ticker.GetProofStartUuidResponse
	10, // 12: ticker.Ticker.CreateGenesisProof:output_type -> ticker.CreateGenesisProofResponse
	12, // 13: ticker.Ticker.HappenedBefore:output_type -> ticker.HappenedBeforeResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_ticker_proto_init() }
func file_ticker_proto_init() {
	if File_ticker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ticker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickerImmutableMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamImmutableMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnchorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnchorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProofStartUuidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProofStartUuidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGenesisProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGenesisProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HappenedBeforeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ticker_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HappenedBeforeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ticker_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ticker_proto_goTypes,
		DependencyIndexes: file_ticker_proto_depIdxs,
		EnumInfos:         file_ticker_proto_enumTypes,
		MessageInfos:      file_ticker_proto_msgTypes,
	}.Build()
	File_ticker_proto = out.File
	file_ticker_proto_rawDesc = nil
	file_ticker_proto_goTypes = nil
	file_ticker_proto_depIdxs = nil
}
