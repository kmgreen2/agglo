name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    
    services:
      dynamodb:
        image: amazon/dynamodb-local:latest
        env:
            AWS_ACCESS_KEY_ID: 'localtest'
            AWS_SECRET_ACCESS_KEY: 'localtest'
            REGION: 'us-west-2'
        ports:
        - 8000:8000
        options:  -jar DynamoDBLocal.jar -sharedDb
      minio:
        image: bitnami/minio:latest
        env:
          MINIO_ACCESS_KEY: localtest
          MINIO_SECRET_KEY: localtest
        ports:
        - 9000:9000
        options: --name minio-server  --health-cmd="curl --silent --fail http://localhost:9000/minio/health/live || exit 1" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    
    - name: Install mockgen
      run: go get github.com/golang/mock/mockgen@v1.4.4
    
    - name: Test minio is up
      run: nc localhost 9000 -vz
    
    - name: Install minio-client
      run: wget https://dl.min.io/client/mc/release/linux-amd64/mc && chmod +x mc && ./mc alias set localtest http://localhost:9000 localtest localtest
    
    - name: Create Minio bucket
      run: ./mc mb localtest/localtest || echo "noop"
    
    - name: Create Dynamo table
      run: aws dynamodb create-table --endpoint-url http://localhost:8000 --region us-west-2
                --table-name localkvstore
                --attribute-definitions
                    AttributeName=KeyPrefix,AttributeType=S
                    AttributeName=ValueKey,AttributeType=S
                --key-schema AttributeName=KeyPrefix,KeyType=HASH AttributeName=ValueKey,KeyType=RANGE
                --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 || echo "noop"
      env:
        AWS_ACCESS_KEY_ID: 'localtest'
        AWS_SECRET_ACCESS_KEY: 'localtest'
        REGION: 'us-west-2'

    - name: Build
      run: make ci-build

    - name: Unit Test
      run: make ci-test
      env:
        AWS_ACCESS_KEY_ID: 'localtest'
        AWS_SECRET_ACCESS_KEY: 'localtest'
        REGION: 'us-west-2'
    
    - name: Entwine Functional Test
      run: CI_TEST=1 usecase/entwine/scripts/run-dual-binge-entwine.sh 
      env:
        AWS_ACCESS_KEY_ID: 'localtest'
        AWS_SECRET_ACCESS_KEY: 'localtest'
        REGION: 'us-west-2'
