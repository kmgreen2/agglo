{
  "partitionUuid": "938e16fe-a216-4fe1-92bd-dcab49646fb9",
  "pipelines": [
    {
      "name": "Jira",
      "processes": [
        {
          "name": "MustBeJira",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "JiraAnnotate",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "Jira",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": true,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "CreateTicket",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": true,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "JiraOut",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        }
      ],
      "enableTracing": false,
      "enableMetrics": false
    },
    {
      "name": "GitHub",
      "processes": [
        {
          "name": "MustBeGithub",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "GithubAnnotate",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "Github",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "CreateCommit",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "Dumbserver",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        }
      ],
      "enableTracing": false,
      "enableMetrics": false
    },
    {
      "name": "CircleCI",
      "processes": [
        {
          "name": "MustBeCircleCI",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "CircleCIAnnotator",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "CircleCI",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "CreateCICD",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "Dumbserver",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        },
        {
          "name": "CircleciOut",
          "retryStrategy": {
            "numRetries": 0,
            "initialBackOffMs": 0
          },
          "instrumentation": {
            "enableTracing": false,
            "latency": false,
            "counter": false
          }
        }
      ],
      "enableTracing": false,
      "enableMetrics": false
    }
  ],
  "externalSystems": [
    {
      "name": "JiraOut",
      "connectionString": "/tmp/jiraout",
      "externalType": "ExternalLocalFile"
    },
    {
      "name": "GithubOut",
      "connectionString": "/tmp/githubout",
      "externalType": "ExternalLocalFile"
    },
    {
      "name": "CircleciOut",
      "connectionString": "/tmp/circleciout",
      "externalType": "ExternalLocalFile"
    },
    {
      "name": "DumbServer",
      "connectionString": "http://localhost:8080/webhook",
      "externalType": "ExternalHttp"
    }
  ],
  "processDefinitions": [
    {
      "tee": {
        "name": "JiraOut",
        "condition": {},
        "outputConnectorRef": "JiraOut",
        "transformerRef": "",
        "additionalBody": {}
      }
    },
    {
      "continuation": {
        "name": "MustBeCircleCI",
        "condition": {
          "exists": {
            "ops": [
              {
                "key": "reponame",
                "op": "Exists"
              }
            ]
          }
        }
      }
    },
    {
      "transformer": {
        "name": "Github",
        "specs": [
          {
            "sourceField": "head_commit.id",
            "targetField": "digest",
            "transformation": {
              "transformationType": "TransformCopy",
              "condition": {
                "exists": {
                  "ops": [
                    {
                      "key": "repository.id",
                      "op": "Exists"
                    }
                  ]
                }
              }
            }
          },
          {
            "sourceField": "head_commit.author.username",
            "targetField": "author",
            "transformation": {
              "transformationType": "TransformCopy",
              "condition": {
                "exists": {
                  "ops": [
                    {
                      "key": "repository.id",
                      "op": "Exists"
                    }
                  ]
                }
              }
            }
          },
          {
            "sourceField": "head_commit.message",
            "targetField": "message",
            "transformation": {
              "transformationType": "TransformCopy",
              "condition": {
                "exists": {
                  "ops": [
                    {
                      "key": "repository.id",
                      "op": "Exists"
                    }
                  ]
                }
              }
            }
          }
        ],
        "forwardInputFields": true
      }
    },
    {
      "spawner": {
        "name": "CreateCICD",
        "condition": {
          "exists": {
            "ops": [
              {
                "key": "build_num",
                "op": "Exists"
              }
            ]
          }
        },
        "delayInMs": 0,
        "doSync": true,
        "job": {
          "runnable": {
            "pathToExec": "/Users/kmgreen/Project/go/src/github.com/kmgreen2/agglo/bin/activitytracker",
            "cmdArgs": [
              "-commandType",
              "CreateCICD"
            ]
          }
        }
      }
    },
    {
      "annotator": {
        "name": "CircleCIAnnotator",
        "annotations": [
          {
            "fieldKey": "integrationType",
            "value": "circleci",
            "condition": {
              "exists": {
                "ops": [
                  {
                    "key": "build_num",
                    "op": "Exists"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "spawner": {
        "name": "CreateTicket",
        "condition": {
          "expression": {
            "comparator": {
              "lhs": {
                "variable": {
                  "name": "webhookEvent"
                }
              },
              "rhs": {
                "literal": "jira:issue_created"
              },
              "op": "Equal"
            }
          }
        },
        "delayInMs": 0,
        "doSync": true,
        "job": {
          "runnable": {
            "pathToExec": "/Users/kmgreen/Project/go/src/github.com/kmgreen2/agglo/bin/activitytracker",
            "cmdArgs": [
              "-commandType",
              "CreateTicket"
            ]
          }
        }
      }
    },
    {
      "tee": {
        "name": "Dumbserver",
        "condition": {},
        "outputConnectorRef": "DumbServer",
        "transformerRef": "",
        "additionalBody": {
          "fizz": "buzz"
        }
      }
    },
    {
      "tee": {
        "name": "GithubOut",
        "condition": {},
        "outputConnectorRef": "GithubOut",
        "transformerRef": "",
        "additionalBody": {}
      }
    },
    {
      "transformer": {
        "name": "Jira",
        "specs": [
          {
            "sourceField": "issue.fields.status.name",
            "targetField": "state",
            "transformation": {
              "transformationType": "TransformCopy",
              "condition": {
                "expression": {
                  "comparator": {
                    "lhs": {
                      "variable": {
                        "name": "webhookEvent"
                      }
                    },
                    "rhs": {
                      "literal": "jira:.*"
                    },
                    "op": "RegexMatch"
                  }
                }
              }
            }
          },
          {
            "sourceField": "issue.fields.assignee.accountId",
            "targetField": "assignee",
            "transformation": {
              "transformationType": "TransformCopy",
              "condition": {
                "expression": {
                  "comparator": {
                    "lhs": {
                      "variable": {
                        "name": "webhookEvent"
                      }
                    },
                    "rhs": {
                      "literal": "jira:.*"
                    },
                    "op": "RegexMatch"
                  }
                }
              }
            }
          },
          {
            "sourceField": "issue.fields.creator.accountId",
            "targetField": "creator",
            "transformation": {
              "transformationType": "TransformCopy",
              "condition": {
                "expression": {
                  "comparator": {
                    "lhs": {
                      "variable": {
                        "name": "webhookEvent"
                      }
                    },
                    "rhs": {
                      "literal": "jira:.*"
                    },
                    "op": "RegexMatch"
                  }
                }
              }
            }
          },
          {
            "sourceField": "issue.fields.summary",
            "targetField": "title",
            "transformation": {
              "transformationType": "TransformCopy",
              "condition": {
                "expression": {
                  "comparator": {
                    "lhs": {
                      "variable": {
                        "name": "webhookEvent"
                      }
                    },
                    "rhs": {
                      "literal": "jira:.*"
                    },
                    "op": "RegexMatch"
                  }
                }
              }
            }
          },
          {
            "sourceField": "issue.fields.description",
            "targetField": "hash",
            "transformation": {
              "transformationType": "TransformMapRegex",
              "condition": {
                "expression": {
                  "comparator": {
                    "lhs": {
                      "variable": {
                        "name": "webhookEvent"
                      }
                    },
                    "rhs": {
                      "literal": "jira:.*"
                    },
                    "op": "RegexMatch"
                  }
                }
              },
              "mapRegexArgs": {
                "regex": "Hash: ([0-9a-z]{40})",
                "replace": "$1"
              }
            }
          }
        ],
        "forwardInputFields": true
      }
    },
    {
      "annotator": {
        "name": "GithubAnnotate",
        "annotations": [
          {
            "fieldKey": "integrationType",
            "value": "github",
            "condition": {
              "exists": {
                "ops": [
                  {
                    "key": "repository.id",
                    "op": "Exists"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "continuation": {
        "name": "MustBeGithub",
        "condition": {
          "exists": {
            "ops": [
              {
                "key": "repository.id",
                "op": "Exists"
              }
            ]
          }
        }
      }
    },
    {
      "spawner": {
        "name": "CreateCommit",
        "condition": {
          "exists": {
            "ops": [
              {
                "key": "repository.id",
                "op": "Exists"
              }
            ]
          }
        },
        "delayInMs": 0,
        "doSync": true,
        "job": {
          "runnable": {
            "pathToExec": "/Users/kmgreen/Project/go/src/github.com/kmgreen2/agglo/bin/activitytracker",
            "cmdArgs": [
              "-commandType",
              "CreateCommit"
            ]
          }
        }
      }
    },
    {
      "transformer": {
        "name": "CircleCI",
        "specs": [
          {
            "sourceField": "username",
            "targetField": "submitter",
            "transformation": {
              "transformationType": "TransformCopy",
              "condition": {
                "exists": {
                  "ops": [
                    {
                      "key": "build_num",
                      "op": "Exists"
                    }
                  ]
                }
              }
            }
          },
          {
            "sourceField": "vcs_revision",
            "targetField": "digest",
            "transformation": {
              "transformationType": "TransformCopy",
              "condition": {
                "exists": {
                  "ops": [
                    {
                      "key": "build_num",
                      "op": "Exists"
                    }
                  ]
                }
              }
            }
          },
          {
            "sourceField": "job",
            "targetField": "eventType",
            "transformation": {
              "transformationType": "TransformCopy",
              "condition": {
                "exists": {
                  "ops": [
                    {
                      "key": "build_num",
                      "op": "Exists"
                    }
                  ]
                }
              }
            }
          }
        ],
        "forwardInputFields": true
      }
    },
    {
      "tee": {
        "name": "CircleciOut",
        "condition": {},
        "outputConnectorRef": "CircleciOut",
        "transformerRef": "",
        "additionalBody": {
          "foobarbaz": 1
        }
      }
    },
    {
      "continuation": {
        "name": "MustBeJira",
        "condition": {
          "exists": {
            "ops": [
              {
                "key": "issue.fields.summary",
                "op": "Exists"
              }
            ]
          }
        }
      }
    },
    {
      "annotator": {
        "name": "JiraAnnotate",
        "annotations": [
          {
            "fieldKey": "integrationType",
            "value": "jira",
            "condition": {
              "expression": {
                "comparator": {
                  "lhs": {
                    "variable": {
                      "name": "webhookEvent"
                    }
                  },
                  "rhs": {
                    "literal": "jira:.*"
                  },
                  "op": "RegexMatch"
                }
              }
            }
          }
        ]
      }
    }
  ]
}